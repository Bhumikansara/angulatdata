var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { RestHandler } from 'rest-core';
import { Injectable } from '@angular/core';
var RestHandlerAbstract = /** @class */ (function (_super) {
    __extends(RestHandlerAbstract, _super);
    function RestHandlerAbstract() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RestHandlerAbstract.prototype.handle = function (req) {
        var _this = this;
        var request = this.prepareRequest(req);
        var resp = {
            promise: null
        };
        resp.promise = new Promise(function (resolve, reject) {
            var subscription = _this.request(request)
                .subscribe(function (resp) {
                subscription = null;
                resolve(_this.handleResponse(req, resp));
            }, function (err) {
                subscription = null;
                reject(_this.handleResponse(req, err));
            });
            resp.abort = function () {
                if (subscription) {
                    subscription.unsubscribe();
                    subscription = null;
                }
            };
        });
        return resp;
    };
    RestHandlerAbstract.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    RestHandlerAbstract.ctorParameters = function () { return []; };
    return RestHandlerAbstract;
}(RestHandler));
export { RestHandlerAbstract };
