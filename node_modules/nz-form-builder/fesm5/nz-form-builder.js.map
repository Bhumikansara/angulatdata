{"version":3,"file":"nz-form-builder.js","sources":["ng://nz-form-builder/lib/form-builder.service.ts","ng://nz-form-builder/lib/form-builder.component.ts","ng://nz-form-builder/lib/form-builder.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormBuilderService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n// import { NgbDatepickerConfig, NgbCalendar, NgbDate, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'nz-form-builder',\n  templateUrl: './form-builder.component.html',\n  styleUrls: ['./form-builder.component.scss']\n})\nexport class FormBuilderComponent implements OnInit {\n\n  @Input() fieldConfig: any;\n  @Input() formConfig: any;\n  @Input() journey: string;\n  @Input() dataToUpdate: any;\n\n  @Output() formValues: any = new EventEmitter()\n\n  checkboxArr = [];\n  filesSelected: any;\n  dynamicForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n    this.createDynamicForm();\n  }\n\n  /**\n   * Create Form Group\n   */\n  createDynamicForm() {\n    this.dynamicForm = this.fb.group({}),\n      this.dynamicForm.valueChanges.subscribe((value) => {\n      })\n    this.initializeDynamicForm();\n    // dummy data to test\n    const valuesDyn = {\n      \"firstname\": \"nizam123\",\n      \"lastname\": \"shaik456\",\n      \"class\": \"8\",\n      \"age\": \"30\",\n      \"dateofbirth\": \"1994-12-05\",\n      \"gender\": \"female\",\n      \"state\": [\n        {\n          \"key\": \"Nellore\",\n          \"value\": \"nellore\",\n          \"isChecked\": true\n        }\n      ],\n      \"address\": \"buchi reddy palem\",\n      \"file\": {\n        \"0\": {}\n      }\n    }\n    if (this.journey === 'update' && this.dataToUpdate){\n      this.setFormFields(this.dataToUpdate);\n    }\n      \n  }\n\n  /**\n   * Initialize the form with all validations and patterns\n   */\n  initializeDynamicForm() {\n    this.fieldConfig.forEach((row) => {\n      if (row.required === true && row.pattern != '') {\n        this.dynamicForm.addControl(row.name, new FormControl({ value: '', disabled: row.disabled }, [Validators.required, Validators.pattern(row.pattern)]));\n      } else if (row.pattern != '') {\n        this.dynamicForm.addControl(row.name, new FormControl({ value: '', disabled: row.disabled }, [Validators.pattern(row.pattern)]));\n      } else if (row.required === true) {\n        this.dynamicForm.addControl(row.name, new FormControl({ value: '', disabled: row.disabled }, [Validators.required]));\n      } else {\n        this.dynamicForm.addControl(row.name, new FormControl({ value: '', disabled: row.disabled }));\n      }\n    });\n  }\n\n  /**\n   * For Validations , This marks all fields as touched on click of submit\n   */\n  private markFormGroupTouched(formGroup: FormGroup) {\n    (<any>Object).values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  onCancel() {\n    // reset the form\n    Object.keys(this.dynamicForm.controls).forEach((name, i) => {\n      this.dynamicForm.controls[name].patchValue('');\n    })\n  }\n\n  /**\n   * Checkbox logic\n   */\n  toggleSelect(event, option, field, actualArr) {\n\n    const found = this.checkboxArr.some((el) => {\n      return el.key === option.key;\n    });\n    if (!found) {\n      this.checkboxArr.push({ key: option.key, value: option.value, isChecked: true });\n    } else {\n      const index = this.checkboxArr.map((row) => { return row.key; }).indexOf(option.key);\n      this.checkboxArr.splice(index, 1);\n    }\n    this.dynamicForm.controls[field.name].setValue(this.checkboxArr);\n  }\n\n  /**\n   * The below logic for edit Journey\n   * @param values => will be the form values to patch in form\n   */\n\n  setFormFields(values) {\n    this.checkboxArr = [];\n    Object.keys(values).forEach((name) => {\n      if (this.dynamicForm.get(name)) {\n        this.dynamicForm.controls[name].patchValue(values[name]);\n      }\n    })\n\n    // If checkbox exist in field Config , the below block activates and map the values to checkbox\n    this.fieldConfig.forEach(element => {\n      if (element.type === 'checkbox') {\n\n        const selectedOptions = this.dynamicForm.get(element.name).value;\n        const totalOptions: any = element.options;\n        this.checkboxArr = selectedOptions;\n\n        totalOptions.forEach((r) => { r.isChecked = false; })\n\n        for (let i = 0; i < selectedOptions.length; i++) {\n          const index = totalOptions.map((row) => { return row.value; }).indexOf(selectedOptions[i].value);\n          totalOptions[index].isChecked = true;\n        }\n      }\n    });\n  }\n\n  /**\n   * For Input type File\n   */\n  onFileSelected(event, field) {\n    this.filesSelected = event.target.files;\n    this.dynamicForm.controls[field.name].setValue(event.target.files);\n  }\n\n  /**\n   * On Submit form\n   */\n  onDSubmit(dynamicForm) {\n    this.markFormGroupTouched(this.dynamicForm);\n    this.formValues.emit(this.dynamicForm);\n  }\n\n  // Branding\n  mailTo() {\n    let url;\n    url = 'mailto:' + 'nizamuddin407@gmail.com';\n    url += '?subject=' + 'Dynamic form builder';\n    url += '&body=' + '';\n    window.open(url, '', '\"width=200,height=100\"');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormBuilderComponent } from './form-builder.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [FormBuilderComponent],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n  ],\n  exports: [FormBuilderComponent]\n})\nexport class FormBuilderModule { }\n"],"names":[],"mappings":"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"}